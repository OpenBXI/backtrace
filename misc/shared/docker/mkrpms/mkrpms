#!/bin/bash

###############################################################################
# Author: Pierre Vignéras <pierre.vigneras@atos.net>
# Contributor: Sébastien Miquée <sebastien.miquee@atos.net>
# Copyright (C) 2016 - 2017  Bull S.A.S.  -  All rights reserved
# This is not Free or Open Source software.
# Please contact Bull SAS for details about its license.
###############################################################################


# Reading configuration file
CONF=${HOME}/.config/mkrpms.conf

if [ ! -f "${CONF}" ]
then
    >&2 echo "Configuration file ${CONF} is mandatory."
    exit 1
fi

source "${CONF}"

# Checking environment variables setup

if [ -z "${RPMS_DIR}" ]
then
    echo "Please define RPMS_DIR variable in ${CONF}" >&2
    exit 1
fi

if [ -z "${TMP_DIR}" ]
then
    echo "Please define TMP_DIR variable in ${CONF}" >&2
    exit 1
fi


# Checking paths to exist and with the correct rights

### Build
if [ ! -d "${RPMS_DIR}" ]
then
    echo "${RPMS_DIR} does not exist!" >&2
    echo " => Creating ${RPMS_DIR}"
    mkdir -p "${RPMS_DIR}"
fi

# Write acces to pdp fantom user with 1000
if [ "$(id -u)" -ne 1000 ]
then
    chmod a+w "${RPMS_DIR}"
    if [ ${?} -ne 0 ]
    then
        exit 1
    fi
fi

### Temp / internal
if [ ! -d "${TMP_DIR}" ]
then
    echo "${TPM_DIR} does not exist!" >&2
    echo " => Creating ${TMP_DIR}"
    mkdir -p "${TMP_DIR}"
fi

# Write acces to pdp fantom user with 1000
if [ "$(id -u)" -ne 1000 ]
then
    chmod a+w "${TMP_DIR}"
    if [ ${?} -ne 0 ]
    then
        exit 1
    fi
fi


###########################################################################
###########################################################################
# That's all what you have to configure
###########################################################################
###########################################################################


if [ ${#} -lt 1 ]
then
    >&2 echo "Usage: $(basename ${0}) docker-images-pdp"
    exit 1
fi

if ! which docker > /dev/null; then
    >&2 echo "docker is required, install it: https://docs.docker.com/engine/installation/"
    exit 1;
fi


if ! docker version > /dev/null; then
    >&2 echo "docker daemon has not been started?"
    exit 1;
fi

DOCKER_MKRPMS=$1
shift
DOCKER_MKRPMS_IMAGE=$(docker images -q ${DOCKER_MKRPMS})

if [ -z "${DOCKER_MKRPMS_IMAGE}" ]
then
    echo "DOCKER_MKRPMS_IMAGE not found, please make it"
    exit 1
fi


## Use this one if you want the container to be removed after the command
CMD="docker run \
    --rm \
    --name mkrpms \
    --hostname mkrpms \
    --volume $(readlink -f ../../):/mnt:ro \
    --volume ${RPMS_DIR}:/mkrpms_directory \
    --volume ${TMP_DIR}:/tmp \
    --tty \
    --interactive \
    --user fantom \
    ${DOCKER_MKRPMS}  \
    /bin/bash -li /home/fantom/scripts/mkrpm"

# CMD="docker run \
#     --name pdp \
#     --hostname pdp \
#     --volume ${SRC_DIR}:/mnt:ro \
#     --volume ${RPMS_DIR}:/mkrpms_directory \
#     --tty \
#     --interactive \
#     --user fantom \
#     local/rhel-pdp \
#     /bin/bash -li /home/fantom/scripts/mkrpms $*"


echo "Launching: $CMD"

$CMD
